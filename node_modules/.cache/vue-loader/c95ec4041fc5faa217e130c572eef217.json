{"remainingRequest":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\components\\CreateTopic.vue?vue&type=style&index=0&id=9bdc93da&lang=css","dependencies":[{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\components\\CreateTopic.vue","mtime":1752853365461},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\css-loader\\dist\\cjs.js","mtime":1752810157558},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1752810158948},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\postcss-loader\\src\\index.js","mtime":1752810157001},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752810157864},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\index.js","mtime":1752810158306}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiBZb3VyIGV4aXN0aW5nIHN0eWxlcyAobm8gY2hhbmdlcyBuZWVkZWQgaGVyZSwganVzdCBhZGRpbmcgdGhlbSBmb3IgY29tcGxldGVuZXNzKSAqLw0KZm9ybSB7DQogIHBhZGRpbmc6IDIwcHg7DQogIGZvbnQtc2l6ZTogMTZweDsNCn0NCmZvcm0gKiB7DQogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogIGxpbmUtaGVpZ2h0OiAxLjU7DQp9DQouZmllbGQgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KfQ0KLmZpZWxkIGxhYmVsIHsNCiAgbWFyZ2luOiA0cHggMDsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQp9DQouZmllbGQgaW5wdXQsDQouZmllbGQgdGV4dGFyZWEgew0KICBwYWRkaW5nOiA4cHg7DQogIGZvbnQtc2l6ZTogMThweDsNCn0NCi5maWVsZCB0ZXh0YXJlYSB7DQogIGhlaWdodDogMzAwcHg7DQp9DQouYWN0aW9ucyB7DQogIHRleHQtYWxpZ246IHJpZ2h0Ow0KICBwYWRkaW5nOiAxMHB4IDA7DQp9DQoNCi8qIFN0eWxlcyBmb3IgYnV0dG9ucywgY29uc2lzdGVudCB3aXRoIG90aGVyIGZvcm1zICovDQouYWN0aW9ucyBidXR0b24gew0KICBwYWRkaW5nOiAxMHB4IDIwcHg7DQogIGJvcmRlcjogbm9uZTsNCiAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICBjdXJzb3I6IHBvaW50ZXI7DQogIGZvbnQtc2l6ZTogMTZweDsNCiAgbWFyZ2luLWxlZnQ6IDEwcHg7DQp9DQoNCi5hY3Rpb25zIGJ1dHRvblt0eXBlPSJzdWJtaXQiXSB7DQogIGJhY2tncm91bmQtY29sb3I6ICMyOGE3NDU7IC8qIEdyZWVuIGZvciBzYXZlICovDQogIGNvbG9yOiB3aGl0ZTsNCn0NCg0KLmFjdGlvbnMgYnV0dG9uW3R5cGU9InN1Ym1pdCJdOmhvdmVyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzIxODgzODsNCn0NCg0KLmFjdGlvbnMgYnV0dG9uW3R5cGU9ImJ1dHRvbiJdIHsgLyogRm9yIHRoZSBDYW5jZWwgYnV0dG9uICovDQogIGJhY2tncm91bmQtY29sb3I6ICM2Yzc1N2Q7IC8qIEdyYXkgKi8NCiAgY29sb3I6IHdoaXRlOw0KfQ0KDQouYWN0aW9ucyBidXR0b25bdHlwZT0iYnV0dG9uIl06aG92ZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWE2MjY4Ow0KfQ0K"},{"version":3,"sources":["CreateTopic.vue"],"names":[],"mappings":";AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CreateTopic.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <form @submit.prevent=\"saveTopic\"> <div class=\"field\">\r\n      <label for=\"title\">Title</label>\r\n      <input type=\"text\" id=\"title\" v-model=\"topic.title\" /> </div>\r\n    <div class=\"actions\">\r\n      <button type=\"submit\">Save Document</button>\r\n      <button type=\"button\" @click=\"cancel\">Cancel</button> </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\n// REMOVE THIS IMPORT - No longer using external service\r\n// import topicService from \"@/services/TopicService.js\";\r\n\r\nimport { mapActions } from 'vuex'; // Import mapActions\r\n\r\nexport default {\r\n  name: \"create-topic\",\r\n  data() {\r\n    return {\r\n      topic: {\r\n        // ID generation should ideally be handled by the store\r\n        // or a backend to ensure uniqueness. For static JSON, Math.random() is okay,\r\n        // but be aware of potential (though rare) collisions.\r\n        id: this.generateUniqueId(), // Use a method to generate ID\r\n        title: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    // Map the action to add a new topic\r\n    ...mapActions(['addTopic']), // You'll need to create this action and mutation in your store\r\n\r\n    generateUniqueId() {\r\n      // A simple method for unique IDs in a static context.\r\n      // In a real app, IDs would come from the database.\r\n      return Date.now() + Math.floor(Math.random() * 1000);\r\n    },\r\n    saveTopic() {\r\n      if (!this.topic.title.trim()) { // Basic validation\r\n        alert('Topic title cannot be empty.');\r\n        return;\r\n      }\r\n\r\n      // Dispatch the Vuex action to add the new topic to the store\r\n      this.addTopic(this.topic)\r\n        .then(() => {\r\n          // After successful addition, redirect to the home page or the new topic's page\r\n          this.$router.push(\"/\");\r\n          // Optionally, reset the form for another entry (if not redirecting)\r\n          // this.topic.title = \"\";\r\n          // this.topic.id = this.generateUniqueId();\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error adding topic:\", error);\r\n          // Handle error, e.g., show an alert\r\n        });\r\n    },\r\n    cancel() {\r\n      // Go back to the previous page (Home)\r\n      this.$router.back();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your existing styles (no changes needed here, just adding them for completeness) */\r\nform {\r\n  padding: 20px;\r\n  font-size: 16px;\r\n}\r\nform * {\r\n  box-sizing: border-box;\r\n  line-height: 1.5;\r\n}\r\n.field {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.field label {\r\n  margin: 4px 0;\r\n  font-weight: bold;\r\n}\r\n.field input,\r\n.field textarea {\r\n  padding: 8px;\r\n  font-size: 18px;\r\n}\r\n.field textarea {\r\n  height: 300px;\r\n}\r\n.actions {\r\n  text-align: right;\r\n  padding: 10px 0;\r\n}\r\n\r\n/* Styles for buttons, consistent with other forms */\r\n.actions button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.actions button[type=\"submit\"] {\r\n  background-color: #28a745; /* Green for save */\r\n  color: white;\r\n}\r\n\r\n.actions button[type=\"submit\"]:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.actions button[type=\"button\"] { /* For the Cancel button */\r\n  background-color: #6c757d; /* Gray */\r\n  color: white;\r\n}\r\n\r\n.actions button[type=\"button\"]:hover {\r\n  background-color: #5a6268;\r\n}\r\n</style>"]}]}