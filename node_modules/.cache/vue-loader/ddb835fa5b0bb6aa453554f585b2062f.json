{"remainingRequest":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\components\\TopicList.vue?vue&type=style&index=0&id=3e54bbed&lang=css","dependencies":[{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\components\\TopicList.vue","mtime":1752853163344},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\css-loader\\dist\\cjs.js","mtime":1752810157558},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1752810158948},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\postcss-loader\\src\\index.js","mtime":1752810157001},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752810157864},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\index.js","mtime":1752810158306}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudG9waWMtbGlzdCB7DQogIG1hcmdpbjogMCBhdXRvOw0KICBtYXgtd2lkdGg6IDgwMHB4Ow0KfQ0KLnRvcGljIHsNCiAgZm9udC1zaXplOiAyNHB4Ow0KICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2YyZjJmMjsNCiAgcGFkZGluZzogMTBweCAyMHB4Ow0KfQ0KLnRvcGljOmxhc3QtY2hpbGQgew0KICBib3JkZXI6IDBweDsNCn0NCnRhYmxlIHsNCiAgdGV4dC1hbGlnbjogbGVmdDsNCiAgd2lkdGg6IDgwMHB4Ow0KICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOw0KfQ0KdGQgew0KICBwYWRkaW5nOiA0cHg7DQp9DQp0Ym9keSB0cjpudGgtY2hpbGQoZXZlbikgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyOw0KfQ0KDQoudG9waWMtbGlzdCBhOmxpbmssDQoudG9waWMtbGlzdCBhOnZpc2l0ZWQgew0KICBjb2xvcjogYmx1ZTsNCiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KfQ0KLnRvcGljLWxpc3QgYTpob3ZlciB7DQogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOw0KfQ0K"},{"version":3,"sources":["TopicList.vue"],"names":[],"mappings":";AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TopicList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"topic-list\">\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Topic</th>\r\n          <th>Edit</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"topic in topics\" :key=\"topic.id\">\r\n          <td width=\"80%\">\r\n            <router-link\r\n              :to=\"{ name: 'Messages', params: { topicId: topic.id } }\" @click.native=\"selectTopic(topic)\"\r\n            >\r\n              {{ topic.title }}\r\n            </router-link>\r\n          </td>\r\n          <td>\r\n            <router-link :to=\"{ name: 'EditTopic', params: {id: topic.id} }\">Edit</router-link>\r\n          </td>\r\n          <td>\r\n            <a href=\"#\" @click.prevent=\"confirmAndDeleteTopic(topic.id)\">Delete</a>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// No longer importing topicService here if we're purely using static JSON in store\r\n// import topicService from \"@/services/TopicService.js\"; // REMOVE THIS LINE\r\n\r\nimport { mapState, mapActions } from 'vuex'; // Import mapState and mapActions\r\n\r\nexport default {\r\n  name: \"topic-list\",\r\n  computed: {\r\n    ...mapState(['topics']) // Map the 'topics' state from your Vuex store\r\n  },\r\n  methods: {\r\n    // Map the actions you've defined in your store\r\n    ...mapActions(['selectTopic', 'deleteTopic']), // Assuming you'll create a deleteTopic action in store\r\n\r\n    confirmAndDeleteTopic(id) {\r\n      if (confirm(\"Are you sure you want to delete this topic and all its messages?\")) {\r\n        // Dispatch the deleteTopic action in your store\r\n        this.deleteTopic(id);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // No need to call getTopics() here anymore because state.topics is already populated\r\n    // from initialData in store/index.js upon app load.\r\n    // If you want to set an initial active topic when the list first loads, do it here:\r\n    // if (this.topics.length > 0 && !this.$store.state.activeTopic.id) {\r\n    //   this.selectTopic(this.topics[0]); // Select the first topic by default\r\n    // }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.topic-list {\r\n  margin: 0 auto;\r\n  max-width: 800px;\r\n}\r\n.topic {\r\n  font-size: 24px;\r\n  border-bottom: 1px solid #f2f2f2;\r\n  padding: 10px 20px;\r\n}\r\n.topic:last-child {\r\n  border: 0px;\r\n}\r\ntable {\r\n  text-align: left;\r\n  width: 800px;\r\n  border-collapse: collapse;\r\n}\r\ntd {\r\n  padding: 4px;\r\n}\r\ntbody tr:nth-child(even) {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.topic-list a:link,\r\n.topic-list a:visited {\r\n  color: blue;\r\n  text-decoration: none;\r\n}\r\n.topic-list a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"]}]}