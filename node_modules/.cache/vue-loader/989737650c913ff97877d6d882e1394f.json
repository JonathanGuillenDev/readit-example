{"remainingRequest":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\components\\UpdateMessage.vue?vue&type=style&index=0&id=2850effe&lang=css","dependencies":[{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\components\\UpdateMessage.vue","mtime":1752853314768},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\css-loader\\dist\\cjs.js","mtime":1752810157558},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1752810158948},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\postcss-loader\\src\\index.js","mtime":1752810157001},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752810157864},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\vue-loader\\lib\\index.js","mtime":1752810158306}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiBBZGQgc29tZSBiYXNpYyBzdHlsZXMgZm9yIHRoZSBmb3JtLCBzaW1pbGFyIHRvIFVwZGF0ZVRvcGljLnZ1ZSAqLw0KZm9ybSB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIHBhZGRpbmc6IDIwcHg7DQogIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCiAgYm94LXNoYWRvdzogMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsNCn0NCg0KLmZpZWxkIHsNCiAgbWFyZ2luLWJvdHRvbTogMTVweDsNCn0NCg0KLmZpZWxkIGxhYmVsIHsNCiAgZGlzcGxheTogYmxvY2s7DQogIG1hcmdpbi1ib3R0b206IDVweDsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIGNvbG9yOiAjMzMzOw0KfQ0KDQouZmllbGQgaW5wdXRbdHlwZT0idGV4dCJdLA0KLmZpZWxkIHRleHRhcmVhIHsgLyogQWRkZWQgdGV4dGFyZWEgc3R5bGUgKi8NCiAgd2lkdGg6IDEwMCU7DQogIHBhZGRpbmc6IDEwcHg7DQogIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTsNCiAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7DQogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQp9DQoNCi5maWVsZCB0ZXh0YXJlYSB7DQogIG1pbi1oZWlnaHQ6IDEwMHB4OyAvKiBHaXZlIHRleHRhcmVhIGEgZGVmYXVsdCBoZWlnaHQgKi8NCiAgcmVzaXplOiB2ZXJ0aWNhbDsgLyogQWxsb3cgdmVydGljYWwgcmVzaXppbmcgKi8NCn0NCg0KLmFjdGlvbnMgew0KICB0ZXh0LWFsaWduOiByaWdodDsNCiAgbWFyZ2luLXRvcDogMjBweDsNCn0NCg0KLmFjdGlvbnMgYnV0dG9uIHsNCiAgcGFkZGluZzogMTBweCAyMHB4Ow0KICBib3JkZXI6IG5vbmU7DQogIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBmb250LXNpemU6IDE2cHg7DQogIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KfQ0KDQouYWN0aW9ucyBidXR0b25bdHlwZT0ic3VibWl0Il0gew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmOyAvKiBCbHVlIGZvciB1cGRhdGUgKi8NCiAgY29sb3I6IHdoaXRlOw0KfQ0KDQouYWN0aW9ucyBidXR0b25bdHlwZT0ic3VibWl0Il06aG92ZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzOw0KfQ0KDQouYWN0aW9ucyBidXR0b25bdHlwZT0iYnV0dG9uIl0geyAvKiBGb3IgdGhlIENhbmNlbCBidXR0b24gKi8NCiAgYmFja2dyb3VuZC1jb2xvcjogIzZjNzU3ZDsgLyogR3JheSAqLw0KICBjb2xvcjogd2hpdGU7DQp9DQoNCi5hY3Rpb25zIGJ1dHRvblt0eXBlPSJidXR0b24iXTpob3ZlciB7DQogIGJhY2tncm91bmQtY29sb3I6ICM1YTYyNjg7DQp9DQo="},{"version":3,"sources":["UpdateMessage.vue"],"names":[],"mappings":";AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"UpdateMessage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <form @submit.prevent=\"updateMessage\"> <div class=\"field\">\r\n      <label for=\"title\">Title</label>\r\n      <input id=\"title\" type=\"text\" v-model=\"title\" /> </div>\r\n    <div class=\"field\">\r\n      <label for=\"messageText\">Message</label>\r\n      <textarea id=\"messageText\" v-model=\"messageText\"></textarea> </div>\r\n    <div class=\"actions\">\r\n      <button type=\"submit\">Update Message</button>\r\n      <button type=\"button\" @click=\"cancel\">Cancel</button> </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\n// REMOVE THIS IMPORT - No longer using external service\r\n// import messageService from \"../services/MessageService\";\r\n\r\nimport { mapState, mapActions } from 'vuex'; // Import mapState and mapActions\r\n\r\nexport default {\r\n  // Renamed for clarity, reflecting its purpose as an edit component\r\n  name: \"edit-message\",\r\n  props: {\r\n    // These props are passed from the router based on your /:topicId/edit-message/:messageId route\r\n    topicId: [Number, String],\r\n    messageId: [Number, String]\r\n  },\r\n  data() {\r\n    return {\r\n      title: \"\",\r\n      messageText: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    // Need access to allMessages to find the specific message to edit\r\n    ...mapState(['allMessages'])\r\n  },\r\n  methods: {\r\n    // Map the action to update a message\r\n    ...mapActions(['updateTheMessage']), // You'll need to create this action and mutation in your store\r\n\r\n    updateMessage() {\r\n      const updatedMessage = {\r\n        id: this.messageId,\r\n        topicId: this.topicId,\r\n        title: this.title,\r\n        messageText: this.messageText\r\n      };\r\n\r\n      // Dispatch the Vuex action to update the message in the store\r\n      this.updateTheMessage(updatedMessage)\r\n        .then(() => {\r\n          // After successful update, redirect to the messages for this topic\r\n          this.$router.push({ name: \"Messages\", params: { topicId: this.topicId } });\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error updating message:\", error);\r\n          // Handle error, e.g., show an alert\r\n        });\r\n    },\r\n    cancel() {\r\n      // Go back to the previous page (topic details)\r\n      this.$router.back();\r\n    }\r\n  },\r\n  watch: {\r\n    // Watch 'messageId' to load the message details when the component is created or messageId changes\r\n    messageId: {\r\n      immediate: true, // This makes the watcher run immediately when the component is created\r\n      handler(newMessageId) {\r\n        if (newMessageId && this.allMessages.length > 0) { // Ensure allMessages are loaded\r\n          const messageToEdit = this.allMessages.find(msg => msg.id == newMessageId);\r\n\r\n          if (messageToEdit) {\r\n            this.title = messageToEdit.title;\r\n            this.messageText = messageToEdit.messageText;\r\n          } else {\r\n            console.warn(`Message with ID ${newMessageId} not found in store.`);\r\n            this.$router.push(\"/not-found\"); // Redirect if message not found\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // Watch 'allMessages' as a fallback, in case the messages array loads after the component\r\n    allMessages: {\r\n      immediate: true,\r\n      handler(newMessages) {\r\n        if (newMessages.length > 0 && this.messageId && (!this.title || !this.messageText)) {\r\n          const messageToEdit = newMessages.find(msg => msg.id == this.messageId);\r\n          if (messageToEdit) {\r\n            this.title = messageToEdit.title;\r\n            this.messageText = messageToEdit.messageText;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add some basic styles for the form, similar to UpdateTopic.vue */\r\nform {\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.field {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.field label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.field input[type=\"text\"],\r\n.field textarea { /* Added textarea style */\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.field textarea {\r\n  min-height: 100px; /* Give textarea a default height */\r\n  resize: vertical; /* Allow vertical resizing */\r\n}\r\n\r\n.actions {\r\n  text-align: right;\r\n  margin-top: 20px;\r\n}\r\n\r\n.actions button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.actions button[type=\"submit\"] {\r\n  background-color: #007bff; /* Blue for update */\r\n  color: white;\r\n}\r\n\r\n.actions button[type=\"submit\"]:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.actions button[type=\"button\"] { /* For the Cancel button */\r\n  background-color: #6c757d; /* Gray */\r\n  color: white;\r\n}\r\n\r\n.actions button[type=\"button\"]:hover {\r\n  background-color: #5a6268;\r\n}\r\n</style>"]}]}