{"remainingRequest":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\store\\index.js","mtime":1752853547553},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\babel.config.js","mtime":1752807206615},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752810157864},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\babel-loader\\lib\\index.js","mtime":1752810158351}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLml0ZXJhdG9yLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuZmlsdGVyLmpzIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKCi8vIEltcG9ydCB5b3VyIHJlYWRpdC5qc29uIGZpbGUgZGlyZWN0bHkuCi8vIEFkanVzdCB0aGUgcGF0aCBpZiB5b3VyIGZpbGUgbG9jYXRpb24gY2hhbmdlcy4KaW1wb3J0IGluaXRpYWxEYXRhIGZyb20gJ0AvZGF0YS9yZWFkaXQuanNvbic7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgLy8gQXBwbGljYXRpb24ncyBpbml0aWFsIGRhdGEgbG9hZGVkIGZyb20gcmVhZGl0Lmpzb24KICAgIHRvcGljczogaW5pdGlhbERhdGEudG9waWNzIHx8IFtdLAogICAgLy8gQWxsIGF2YWlsYWJsZSB0b3BpY3MKICAgIGFsbE1lc3NhZ2VzOiBpbml0aWFsRGF0YS5tZXNzYWdlcyB8fCBbXSwKICAgIC8vIEFsbCBtZXNzYWdlcyBhY3Jvc3MgYWxsIHRvcGljcwoKICAgIC8vIEN1cnJlbnRseSBzZWxlY3RlZCB0b3BpYyBhbmQgaXRzIGFzc29jaWF0ZWQgbWVzc2FnZXMKICAgIGFjdGl2ZVRvcGljOiB7CiAgICAgIGlkOiAwLAogICAgICB0aXRsZTogJycsCiAgICAgIG1lc3NhZ2VzOiBbXSAvLyBQb3B1bGF0ZWQgZHluYW1pY2FsbHkgYmFzZWQgb24gYWN0aXZlIHRvcGljCiAgICB9LAogICAgLy8gTm90IGRpcmVjdGx5IHVzZWQgZm9yIG1lc3NhZ2VzIGRpc3BsYXksIGJ1dCBjb3VsZCBiZSBmb3Igc2luZ2xlIG1lc3NhZ2UgZWRpdGluZwogICAgYWN0aXZlTWVzc2FnZTogewogICAgICBpZDogbnVsbCwKICAgICAgdG9waWNJZDogbnVsbCwKICAgICAgdGl0bGU6ICcnLAogICAgICBtZXNzYWdlVGV4dDogJycKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgLy8gLS0tIFRvcGljIE11dGF0aW9ucyAtLS0KICAgIFNFVF9UT1BJQ1Moc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUudG9waWNzID0gZGF0YTsKICAgIH0sCiAgICBTRVRfQUNUSVZFX1RPUElDKHN0YXRlLCB0b3BpYykgewogICAgICAvLyBGaWx0ZXIgYWxsIG1lc3NhZ2VzIHRvIGdldCBvbmx5IHRob3NlIGJlbG9uZ2luZyB0byB0aGUgc2VsZWN0ZWQgdG9waWMKICAgICAgY29uc3QgbWVzc2FnZXNGb3JUaGlzVG9waWMgPSBzdGF0ZS5hbGxNZXNzYWdlcy5maWx0ZXIobWVzc2FnZSA9PiBtZXNzYWdlLnRvcGljSWQgPT09IHRvcGljLmlkKTsKCiAgICAgIC8vIFVwZGF0ZSB0aGUgYWN0aXZlIHRvcGljIHN0YXRlIHdpdGggaXRzIGRldGFpbHMgYW5kIGZpbHRlcmVkIG1lc3NhZ2VzCiAgICAgIHN0YXRlLmFjdGl2ZVRvcGljID0gewogICAgICAgIGlkOiB0b3BpYy5pZCwKICAgICAgICB0aXRsZTogdG9waWMudGl0bGUsCiAgICAgICAgbWVzc2FnZXM6IG1lc3NhZ2VzRm9yVGhpc1RvcGljCiAgICAgIH07CiAgICB9LAogICAgQUREX1RPUElDKHN0YXRlLCBuZXdUb3BpYykgewogICAgICBzdGF0ZS50b3BpY3MucHVzaChuZXdUb3BpYyk7CiAgICB9LAogICAgVVBEQVRFX1RPUElDKHN0YXRlLCB1cGRhdGVkVG9waWMpIHsKICAgICAgY29uc3QgaW5kZXggPSBzdGF0ZS50b3BpY3MuZmluZEluZGV4KHQgPT4gdC5pZCA9PT0gdXBkYXRlZFRvcGljLmlkKTsKICAgICAgaWYgKGluZGV4ICE9PSAtMSkgewogICAgICAgIHN0YXRlLnRvcGljcy5zcGxpY2UoaW5kZXgsIDEsIHVwZGF0ZWRUb3BpYyk7IC8vIFJlcGxhY2UgdGhlIHRvcGljIG9iamVjdAogICAgICB9CiAgICB9LAogICAgREVMRVRFX1RPUElDKHN0YXRlLCBpZCkgewogICAgICBzdGF0ZS50b3BpY3MgPSBzdGF0ZS50b3BpY3MuZmlsdGVyKHRvcGljID0+IHRvcGljLmlkICE9PSBpZCk7CiAgICAgIHN0YXRlLmFsbE1lc3NhZ2VzID0gc3RhdGUuYWxsTWVzc2FnZXMuZmlsdGVyKG1lc3NhZ2UgPT4gbWVzc2FnZS50b3BpY0lkICE9PSBpZCk7IC8vIFJlbW92ZSBhc3NvY2lhdGVkIG1lc3NhZ2VzCgogICAgICAvLyBDbGVhciBhY3RpdmUgdG9waWMgaWYgaXQgd2FzIHRoZSBvbmUgZGVsZXRlZAogICAgICBpZiAoc3RhdGUuYWN0aXZlVG9waWMuaWQgPT09IGlkKSB7CiAgICAgICAgc3RhdGUuYWN0aXZlVG9waWMgPSB7CiAgICAgICAgICBpZDogMCwKICAgICAgICAgIHRpdGxlOiAnJywKICAgICAgICAgIG1lc3NhZ2VzOiBbXQogICAgICAgIH07CiAgICAgIH0KICAgIH0sCiAgICAvLyAtLS0gTWVzc2FnZSBNdXRhdGlvbnMgLS0tCiAgICBBRERfTUVTU0FHRShzdGF0ZSwgbmV3TWVzc2FnZSkgewogICAgICBzdGF0ZS5hbGxNZXNzYWdlcy5wdXNoKG5ld01lc3NhZ2UpOyAvLyBBZGQgdG8gZ2xvYmFsIGxpc3QKICAgICAgLy8gSWYgdGhlIG5ldyBtZXNzYWdlIGJlbG9uZ3MgdG8gdGhlIGN1cnJlbnQgYWN0aXZlIHRvcGljLCBhbHNvIGFkZCBpdCB0aGVyZSBmb3IgaW1tZWRpYXRlIGRpc3BsYXkKICAgICAgaWYgKHN0YXRlLmFjdGl2ZVRvcGljLmlkID09PSBuZXdNZXNzYWdlLnRvcGljSWQpIHsKICAgICAgICBzdGF0ZS5hY3RpdmVUb3BpYy5tZXNzYWdlcy5wdXNoKG5ld01lc3NhZ2UpOwogICAgICB9CiAgICB9LAogICAgVVBEQVRFX01FU1NBR0Uoc3RhdGUsIHVwZGF0ZWRNZXNzYWdlKSB7CiAgICAgIC8vIFVwZGF0ZSBpbiBnbG9iYWwgYWxsTWVzc2FnZXMgYXJyYXkKICAgICAgY29uc3QgYWxsTWVzc2FnZXNJbmRleCA9IHN0YXRlLmFsbE1lc3NhZ2VzLmZpbmRJbmRleChtc2cgPT4gbXNnLmlkID09PSB1cGRhdGVkTWVzc2FnZS5pZCk7CiAgICAgIGlmIChhbGxNZXNzYWdlc0luZGV4ICE9PSAtMSkgewogICAgICAgIHN0YXRlLmFsbE1lc3NhZ2VzLnNwbGljZShhbGxNZXNzYWdlc0luZGV4LCAxLCB1cGRhdGVkTWVzc2FnZSk7CiAgICAgIH0KCiAgICAgIC8vIFVwZGF0ZSBpbiBhY3RpdmUgdG9waWMncyBtZXNzYWdlcyBhcnJheSwgaWYgYXBwbGljYWJsZQogICAgICBpZiAoc3RhdGUuYWN0aXZlVG9waWMgJiYgc3RhdGUuYWN0aXZlVG9waWMuaWQgPT09IHVwZGF0ZWRNZXNzYWdlLnRvcGljSWQpIHsKICAgICAgICBjb25zdCBhY3RpdmVUb3BpY01lc3NhZ2VJbmRleCA9IHN0YXRlLmFjdGl2ZVRvcGljLm1lc3NhZ2VzLmZpbmRJbmRleChtc2cgPT4gbXNnLmlkID09PSB1cGRhdGVkTWVzc2FnZS5pZCk7CiAgICAgICAgaWYgKGFjdGl2ZVRvcGljTWVzc2FnZUluZGV4ICE9PSAtMSkgewogICAgICAgICAgc3RhdGUuYWN0aXZlVG9waWMubWVzc2FnZXMuc3BsaWNlKGFjdGl2ZVRvcGljTWVzc2FnZUluZGV4LCAxLCB1cGRhdGVkTWVzc2FnZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgREVMRVRFX01FU1NBR0Uoc3RhdGUsIGlkKSB7CiAgICAgIHN0YXRlLmFsbE1lc3NhZ2VzID0gc3RhdGUuYWxsTWVzc2FnZXMuZmlsdGVyKG1lc3NhZ2UgPT4gbWVzc2FnZS5pZCAhPT0gaWQpOyAvLyBSZW1vdmUgZnJvbSBnbG9iYWwgbGlzdAoKICAgICAgLy8gUmVtb3ZlIGZyb20gYWN0aXZlIHRvcGljJ3MgbWVzc2FnZXMgaWYgcHJlc2VudAogICAgICBpZiAoc3RhdGUuYWN0aXZlVG9waWMgJiYgc3RhdGUuYWN0aXZlVG9waWMubWVzc2FnZXMpIHsKICAgICAgICBzdGF0ZS5hY3RpdmVUb3BpYy5tZXNzYWdlcyA9IHN0YXRlLmFjdGl2ZVRvcGljLm1lc3NhZ2VzLmZpbHRlcihtZXNzYWdlID0+IG1lc3NhZ2UuaWQgIT09IGlkKTsKICAgICAgfQogICAgfSwKICAgIFNFVF9BQ1RJVkVfTUVTU0FHRShzdGF0ZSwgbWVzc2FnZSkgewogICAgICAvLyBUaGlzIG11dGF0aW9uIGlzIHVzZWQgdG8gc2V0IGEgc3BlY2lmaWMgbWVzc2FnZSBmb3IgZWRpdGluZy92aWV3aW5nIChpZiBuZWVkZWQpCiAgICAgIHN0YXRlLmFjdGl2ZU1lc3NhZ2UgPSBtZXNzYWdlOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgLy8gLS0tIFRvcGljIEFjdGlvbnMgLS0tCiAgICBzZWxlY3RUb3BpYyh7CiAgICAgIGNvbW1pdAogICAgfSwgdG9waWMpIHsKICAgICAgY29tbWl0KCdTRVRfQUNUSVZFX1RPUElDJywgdG9waWMpOwogICAgfSwKICAgIGFkZFRvcGljKHsKICAgICAgY29tbWl0CiAgICB9LCB0b3BpYykgewogICAgICAvLyBTaW11bGF0ZSBhc3luYyBvcGVyYXRpb24gYW5kIGNvbW1pdCBtdXRhdGlvbgogICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgY29tbWl0KCdBRERfVE9QSUMnLCB0b3BpYyk7CiAgICAgICAgcmVzb2x2ZSgpOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVUaGVUb3BpYyh7CiAgICAgIGNvbW1pdAogICAgfSwgdG9waWMpIHsKICAgICAgLy8gU2ltdWxhdGUgYXN5bmMgb3BlcmF0aW9uIGFuZCBjb21taXQgbXV0YXRpb24KICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgIGNvbW1pdCgnVVBEQVRFX1RPUElDJywgdG9waWMpOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlVG9waWMoewogICAgICBjb21taXQKICAgIH0sIHRvcGljSWQpIHsKICAgICAgLy8gU2ltdWxhdGUgYXN5bmMgb3BlcmF0aW9uIGFuZCBjb21taXQgbXV0YXRpb24KICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgIGNvbW1pdCgnREVMRVRFX1RPUElDJywgdG9waWNJZCk7CiAgICAgICAgcmVzb2x2ZSgpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyAtLS0gTWVzc2FnZSBBY3Rpb25zIC0tLQogICAgYWRkTWVzc2FnZSh7CiAgICAgIGNvbW1pdAogICAgfSwgbWVzc2FnZSkgewogICAgICAvLyBTaW11bGF0ZSBhc3luYyBvcGVyYXRpb24gYW5kIGNvbW1pdCBtdXRhdGlvbgogICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgY29tbWl0KCdBRERfTUVTU0FHRScsIG1lc3NhZ2UpOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlVGhlTWVzc2FnZSh7CiAgICAgIGNvbW1pdAogICAgfSwgbWVzc2FnZSkgewogICAgICAvLyBTaW11bGF0ZSBhc3luYyBvcGVyYXRpb24gYW5kIGNvbW1pdCBtdXRhdGlvbgogICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgY29tbWl0KCdVUERBVEVfTUVTU0FHRScsIG1lc3NhZ2UpOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlTWVzc2FnZSh7CiAgICAgIGNvbW1pdAogICAgfSwgbWVzc2FnZUlkKSB7CiAgICAgIC8vIFNpbXVsYXRlIGFzeW5jIG9wZXJhdGlvbiBhbmQgY29tbWl0IG11dGF0aW9uCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICBjb21taXQoJ0RFTEVURV9NRVNTQUdFJywgbWVzc2FnZUlkKTsKICAgICAgICByZXNvbHZlKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHNldEFjdGl2ZU1lc3NhZ2UoewogICAgICBjb21taXQKICAgIH0sIG1lc3NhZ2UpIHsKICAgICAgY29tbWl0KCdTRVRfQUNUSVZFX01FU1NBR0UnLCBtZXNzYWdlKTsKICAgIH0KICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"names":["Vue","Vuex","initialData","use","Store","state","topics","allMessages","messages","activeTopic","id","title","activeMessage","topicId","messageText","mutations","SET_TOPICS","data","SET_ACTIVE_TOPIC","topic","messagesForThisTopic","filter","message","ADD_TOPIC","newTopic","push","UPDATE_TOPIC","updatedTopic","index","findIndex","t","splice","DELETE_TOPIC","ADD_MESSAGE","newMessage","UPDATE_MESSAGE","updatedMessage","allMessagesIndex","msg","activeTopicMessageIndex","DELETE_MESSAGE","SET_ACTIVE_MESSAGE","actions","selectTopic","commit","addTopic","Promise","resolve","updateTheTopic","deleteTopic","addMessage","updateTheMessage","deleteMessage","messageId","setActiveMessage","modules"],"sources":["C:/Users/terme/Documents/GitHub/readit-example/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\n// Import your readit.json file directly.\r\n// Adjust the path if your file location changes.\r\nimport initialData from '@/data/readit.json';\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    // Application's initial data loaded from readit.json\r\n    topics: initialData.topics || [], // All available topics\r\n    allMessages: initialData.messages || [], // All messages across all topics\r\n\r\n    // Currently selected topic and its associated messages\r\n    activeTopic: {\r\n      id: 0,\r\n      title: '',\r\n      messages: [] // Populated dynamically based on active topic\r\n    },\r\n\r\n    // Not directly used for messages display, but could be for single message editing\r\n    activeMessage: {\r\n      id: null,\r\n      topicId: null,\r\n      title: '',\r\n      messageText: ''\r\n    }\r\n  },\r\n\r\n  mutations: {\r\n    // --- Topic Mutations ---\r\n    SET_TOPICS(state, data) {\r\n      state.topics = data;\r\n    },\r\n    SET_ACTIVE_TOPIC(state, topic) {\r\n      // Filter all messages to get only those belonging to the selected topic\r\n      const messagesForThisTopic = state.allMessages.filter(\r\n        message => message.topicId === topic.id\r\n      );\r\n\r\n      // Update the active topic state with its details and filtered messages\r\n      state.activeTopic = {\r\n        id: topic.id,\r\n        title: topic.title,\r\n        messages: messagesForThisTopic\r\n      };\r\n    },\r\n    ADD_TOPIC(state, newTopic) {\r\n      state.topics.push(newTopic);\r\n    },\r\n    UPDATE_TOPIC(state, updatedTopic) {\r\n      const index = state.topics.findIndex(t => t.id === updatedTopic.id);\r\n      if (index !== -1) {\r\n        state.topics.splice(index, 1, updatedTopic); // Replace the topic object\r\n      }\r\n    },\r\n    DELETE_TOPIC(state, id) {\r\n      state.topics = state.topics.filter(topic => topic.id !== id);\r\n      state.allMessages = state.allMessages.filter(message => message.topicId !== id); // Remove associated messages\r\n\r\n      // Clear active topic if it was the one deleted\r\n      if (state.activeTopic.id === id) {\r\n        state.activeTopic = { id: 0, title: '', messages: [] };\r\n      }\r\n    },\r\n\r\n    // --- Message Mutations ---\r\n    ADD_MESSAGE(state, newMessage) {\r\n      state.allMessages.push(newMessage); // Add to global list\r\n      // If the new message belongs to the current active topic, also add it there for immediate display\r\n      if (state.activeTopic.id === newMessage.topicId) {\r\n        state.activeTopic.messages.push(newMessage);\r\n      }\r\n    },\r\n    UPDATE_MESSAGE(state, updatedMessage) {\r\n      // Update in global allMessages array\r\n      const allMessagesIndex = state.allMessages.findIndex(msg => msg.id === updatedMessage.id);\r\n      if (allMessagesIndex !== -1) {\r\n        state.allMessages.splice(allMessagesIndex, 1, updatedMessage);\r\n      }\r\n\r\n      // Update in active topic's messages array, if applicable\r\n      if (state.activeTopic && state.activeTopic.id === updatedMessage.topicId) {\r\n        const activeTopicMessageIndex = state.activeTopic.messages.findIndex(msg => msg.id === updatedMessage.id);\r\n        if (activeTopicMessageIndex !== -1) {\r\n          state.activeTopic.messages.splice(activeTopicMessageIndex, 1, updatedMessage);\r\n        }\r\n      }\r\n    },\r\n    DELETE_MESSAGE(state, id) {\r\n      state.allMessages = state.allMessages.filter(message => message.id !== id); // Remove from global list\r\n\r\n      // Remove from active topic's messages if present\r\n      if (state.activeTopic && state.activeTopic.messages) {\r\n        state.activeTopic.messages = state.activeTopic.messages.filter(message => message.id !== id);\r\n      }\r\n    },\r\n    SET_ACTIVE_MESSAGE(state, message) {\r\n      // This mutation is used to set a specific message for editing/viewing (if needed)\r\n      state.activeMessage = message;\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    // --- Topic Actions ---\r\n    selectTopic({ commit }, topic) {\r\n      commit('SET_ACTIVE_TOPIC', topic);\r\n    },\r\n    addTopic({ commit }, topic) {\r\n      // Simulate async operation and commit mutation\r\n      return new Promise((resolve) => {\r\n        commit('ADD_TOPIC', topic);\r\n        resolve();\r\n      });\r\n    },\r\n    updateTheTopic({ commit }, topic) {\r\n      // Simulate async operation and commit mutation\r\n      return new Promise((resolve) => {\r\n        commit('UPDATE_TOPIC', topic);\r\n        resolve();\r\n      });\r\n    },\r\n    deleteTopic({ commit }, topicId) {\r\n      // Simulate async operation and commit mutation\r\n      return new Promise((resolve) => {\r\n        commit('DELETE_TOPIC', topicId);\r\n        resolve();\r\n      });\r\n    },\r\n\r\n    // --- Message Actions ---\r\n    addMessage({ commit }, message) {\r\n      // Simulate async operation and commit mutation\r\n      return new Promise((resolve) => {\r\n        commit('ADD_MESSAGE', message);\r\n        resolve();\r\n      });\r\n    },\r\n    updateTheMessage({ commit }, message) {\r\n      // Simulate async operation and commit mutation\r\n      return new Promise((resolve) => {\r\n        commit('UPDATE_MESSAGE', message);\r\n        resolve();\r\n      });\r\n    },\r\n    deleteMessage({ commit }, messageId) {\r\n      // Simulate async operation and commit mutation\r\n      return new Promise((resolve) => {\r\n        commit('DELETE_MESSAGE', messageId);\r\n        resolve();\r\n      });\r\n    },\r\n    setActiveMessage({ commit }, message) {\r\n        commit('SET_ACTIVE_MESSAGE', message);\r\n    }\r\n  },\r\n  modules: {\r\n  }\r\n})"],"mappings":";;;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA,OAAOC,WAAW,MAAM,oBAAoB;AAE5CF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACL;IACAC,MAAM,EAAEJ,WAAW,CAACI,MAAM,IAAI,EAAE;IAAE;IAClCC,WAAW,EAAEL,WAAW,CAACM,QAAQ,IAAI,EAAE;IAAE;;IAEzC;IACAC,WAAW,EAAE;MACXC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,EAAE;MACTH,QAAQ,EAAE,EAAE,CAAC;IACf,CAAC;IAED;IACAI,aAAa,EAAE;MACbF,EAAE,EAAE,IAAI;MACRG,OAAO,EAAE,IAAI;MACbF,KAAK,EAAE,EAAE;MACTG,WAAW,EAAE;IACf;EACF,CAAC;EAEDC,SAAS,EAAE;IACT;IACAC,UAAUA,CAACX,KAAK,EAAEY,IAAI,EAAE;MACtBZ,KAAK,CAACC,MAAM,GAAGW,IAAI;IACrB,CAAC;IACDC,gBAAgBA,CAACb,KAAK,EAAEc,KAAK,EAAE;MAC7B;MACA,MAAMC,oBAAoB,GAAGf,KAAK,CAACE,WAAW,CAACc,MAAM,CACnDC,OAAO,IAAIA,OAAO,CAACT,OAAO,KAAKM,KAAK,CAACT,EACvC,CAAC;;MAED;MACAL,KAAK,CAACI,WAAW,GAAG;QAClBC,EAAE,EAAES,KAAK,CAACT,EAAE;QACZC,KAAK,EAAEQ,KAAK,CAACR,KAAK;QAClBH,QAAQ,EAAEY;MACZ,CAAC;IACH,CAAC;IACDG,SAASA,CAAClB,KAAK,EAAEmB,QAAQ,EAAE;MACzBnB,KAAK,CAACC,MAAM,CAACmB,IAAI,CAACD,QAAQ,CAAC;IAC7B,CAAC;IACDE,YAAYA,CAACrB,KAAK,EAAEsB,YAAY,EAAE;MAChC,MAAMC,KAAK,GAAGvB,KAAK,CAACC,MAAM,CAACuB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKiB,YAAY,CAACjB,EAAE,CAAC;MACnE,IAAIkB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBvB,KAAK,CAACC,MAAM,CAACyB,MAAM,CAACH,KAAK,EAAE,CAAC,EAAED,YAAY,CAAC,CAAC,CAAC;MAC/C;IACF,CAAC;IACDK,YAAYA,CAAC3B,KAAK,EAAEK,EAAE,EAAE;MACtBL,KAAK,CAACC,MAAM,GAAGD,KAAK,CAACC,MAAM,CAACe,MAAM,CAACF,KAAK,IAAIA,KAAK,CAACT,EAAE,KAAKA,EAAE,CAAC;MAC5DL,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACE,WAAW,CAACc,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACT,OAAO,KAAKH,EAAE,CAAC,CAAC,CAAC;;MAEjF;MACA,IAAIL,KAAK,CAACI,WAAW,CAACC,EAAE,KAAKA,EAAE,EAAE;QAC/BL,KAAK,CAACI,WAAW,GAAG;UAAEC,EAAE,EAAE,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEH,QAAQ,EAAE;QAAG,CAAC;MACxD;IACF,CAAC;IAED;IACAyB,WAAWA,CAAC5B,KAAK,EAAE6B,UAAU,EAAE;MAC7B7B,KAAK,CAACE,WAAW,CAACkB,IAAI,CAACS,UAAU,CAAC,CAAC,CAAC;MACpC;MACA,IAAI7B,KAAK,CAACI,WAAW,CAACC,EAAE,KAAKwB,UAAU,CAACrB,OAAO,EAAE;QAC/CR,KAAK,CAACI,WAAW,CAACD,QAAQ,CAACiB,IAAI,CAACS,UAAU,CAAC;MAC7C;IACF,CAAC;IACDC,cAAcA,CAAC9B,KAAK,EAAE+B,cAAc,EAAE;MACpC;MACA,MAAMC,gBAAgB,GAAGhC,KAAK,CAACE,WAAW,CAACsB,SAAS,CAACS,GAAG,IAAIA,GAAG,CAAC5B,EAAE,KAAK0B,cAAc,CAAC1B,EAAE,CAAC;MACzF,IAAI2B,gBAAgB,KAAK,CAAC,CAAC,EAAE;QAC3BhC,KAAK,CAACE,WAAW,CAACwB,MAAM,CAACM,gBAAgB,EAAE,CAAC,EAAED,cAAc,CAAC;MAC/D;;MAEA;MACA,IAAI/B,KAAK,CAACI,WAAW,IAAIJ,KAAK,CAACI,WAAW,CAACC,EAAE,KAAK0B,cAAc,CAACvB,OAAO,EAAE;QACxE,MAAM0B,uBAAuB,GAAGlC,KAAK,CAACI,WAAW,CAACD,QAAQ,CAACqB,SAAS,CAACS,GAAG,IAAIA,GAAG,CAAC5B,EAAE,KAAK0B,cAAc,CAAC1B,EAAE,CAAC;QACzG,IAAI6B,uBAAuB,KAAK,CAAC,CAAC,EAAE;UAClClC,KAAK,CAACI,WAAW,CAACD,QAAQ,CAACuB,MAAM,CAACQ,uBAAuB,EAAE,CAAC,EAAEH,cAAc,CAAC;QAC/E;MACF;IACF,CAAC;IACDI,cAAcA,CAACnC,KAAK,EAAEK,EAAE,EAAE;MACxBL,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACE,WAAW,CAACc,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACZ,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC;;MAE5E;MACA,IAAIL,KAAK,CAACI,WAAW,IAAIJ,KAAK,CAACI,WAAW,CAACD,QAAQ,EAAE;QACnDH,KAAK,CAACI,WAAW,CAACD,QAAQ,GAAGH,KAAK,CAACI,WAAW,CAACD,QAAQ,CAACa,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACZ,EAAE,KAAKA,EAAE,CAAC;MAC9F;IACF,CAAC;IACD+B,kBAAkBA,CAACpC,KAAK,EAAEiB,OAAO,EAAE;MACjC;MACAjB,KAAK,CAACO,aAAa,GAAGU,OAAO;IAC/B;EACF,CAAC;EAEDoB,OAAO,EAAE;IACP;IACAC,WAAWA,CAAC;MAAEC;IAAO,CAAC,EAAEzB,KAAK,EAAE;MAC7ByB,MAAM,CAAC,kBAAkB,EAAEzB,KAAK,CAAC;IACnC,CAAC;IACD0B,QAAQA,CAAC;MAAED;IAAO,CAAC,EAAEzB,KAAK,EAAE;MAC1B;MACA,OAAO,IAAI2B,OAAO,CAAEC,OAAO,IAAK;QAC9BH,MAAM,CAAC,WAAW,EAAEzB,KAAK,CAAC;QAC1B4B,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC;IACDC,cAAcA,CAAC;MAAEJ;IAAO,CAAC,EAAEzB,KAAK,EAAE;MAChC;MACA,OAAO,IAAI2B,OAAO,CAAEC,OAAO,IAAK;QAC9BH,MAAM,CAAC,cAAc,EAAEzB,KAAK,CAAC;QAC7B4B,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC;IACDE,WAAWA,CAAC;MAAEL;IAAO,CAAC,EAAE/B,OAAO,EAAE;MAC/B;MACA,OAAO,IAAIiC,OAAO,CAAEC,OAAO,IAAK;QAC9BH,MAAM,CAAC,cAAc,EAAE/B,OAAO,CAAC;QAC/BkC,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC;IAED;IACAG,UAAUA,CAAC;MAAEN;IAAO,CAAC,EAAEtB,OAAO,EAAE;MAC9B;MACA,OAAO,IAAIwB,OAAO,CAAEC,OAAO,IAAK;QAC9BH,MAAM,CAAC,aAAa,EAAEtB,OAAO,CAAC;QAC9ByB,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC;IACDI,gBAAgBA,CAAC;MAAEP;IAAO,CAAC,EAAEtB,OAAO,EAAE;MACpC;MACA,OAAO,IAAIwB,OAAO,CAAEC,OAAO,IAAK;QAC9BH,MAAM,CAAC,gBAAgB,EAAEtB,OAAO,CAAC;QACjCyB,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC;IACDK,aAAaA,CAAC;MAAER;IAAO,CAAC,EAAES,SAAS,EAAE;MACnC;MACA,OAAO,IAAIP,OAAO,CAAEC,OAAO,IAAK;QAC9BH,MAAM,CAAC,gBAAgB,EAAES,SAAS,CAAC;QACnCN,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ,CAAC;IACDO,gBAAgBA,CAAC;MAAEV;IAAO,CAAC,EAAEtB,OAAO,EAAE;MAClCsB,MAAM,CAAC,oBAAoB,EAAEtB,OAAO,CAAC;IACzC;EACF,CAAC;EACDiC,OAAO,EAAE,CACT;AACF,CAAC,CAAC","ignoreList":[]}]}