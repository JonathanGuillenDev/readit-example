{"remainingRequest":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\src\\store\\index.js","mtime":1752847035658},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\babel.config.js","mtime":1752807206615},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1752810157864},{"path":"C:\\Users\\terme\\Documents\\GitHub\\readit-example\\node_modules\\babel-loader\\lib\\index.js","mtime":1752810158351}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLml0ZXJhdG9yLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuZmlsdGVyLmpzIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKCi8vIEltcG9ydCB5b3VyIHJlYWRpdC5qc29uIGZpbGUgZGlyZWN0bHkKLy8gQWRqdXN0IHRoZSBwYXRoIGJlbG93IGJhc2VkIG9uIHdoZXJlIHlvdSBhY3R1YWxseSBwbGFjZSB5b3VyIHJlYWRpdC5qc29uIGZpbGUKaW1wb3J0IGluaXRpYWxEYXRhIGZyb20gJ0AvZGF0YS9yZWFkaXQuanNvbic7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgLy8gSW5pdGlhbGl6ZSB0b3BpY3Mgd2l0aCB0aGUgZGF0YSBmcm9tIHJlYWRpdC5qc29uCiAgICB0b3BpY3M6IGluaXRpYWxEYXRhLnRvcGljcyB8fCBbXSwKICAgIGFsbE1lc3NhZ2VzOiBpbml0aWFsRGF0YS5tZXNzYWdlcyB8fCBbXSwKICAgIC8vIFVzZSB8fCBbXSB0byBlbnN1cmUgaXQncyBhbiBhcnJheSBldmVuIGlmIHRvcGljcyBpcyBtaXNzaW5nIGluIEpTT04KICAgIC8vIFlvdSBtaWdodCBhbHNvIHdhbnQgdG8gaW5pdGlhbGl6ZSBhY3RpdmVUb3BpYyBhbmQgYWN0aXZlTWVzc2FnZSBiYXNlZCBvbiBpbml0aWFsRGF0YSBpZiBkZXNpcmVkCiAgICAvLyBGb3Igbm93LCB3ZSdsbCBrZWVwIHRoZW0gYXMgdGhleSB3ZXJlLCBhc3N1bWluZyB0aGV5J2xsIGJlIHNldCBkeW5hbWljYWxseSBsYXRlci4KICAgIGFjdGl2ZVRvcGljOiB7CiAgICAgIGlkOiAwLAogICAgICB0aXRsZTogJycsCiAgICAgIG1lc3NhZ2VzOiBbXQogICAgfSwKICAgIGFjdGl2ZU1lc3NhZ2U6IHsKICAgICAgaWQ6IG51bGwsCiAgICAgIHRvcGljSWQ6IG51bGwsCiAgICAgIHRpdGxlOiAnJywKICAgICAgbWVzc2FnZVRleHQ6ICcnCiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9UT1BJQ1Moc3RhdGUsIGRhdGEpIHsKICAgICAgc3RhdGUudG9waWNzID0gZGF0YTsKICAgIH0sCiAgICBTRVRfQUNUSVZFX1RPUElDKHN0YXRlLCB0b3BpYykgewogICAgICBjb25zdCBtZXNzYWdlc0ZvclRoaXNUb3BpYyA9IHN0YXRlLmFsbE1lc3NhZ2VzLmZpbHRlcihtZXNzYWdlID0+IG1lc3NhZ2UudG9waWNJZCA9PT0gdG9waWMuaWQpOwoKICAgICAgLy8gU2V0IHRoZSBhY3RpdmUgdG9waWMgYW5kIGl0cyBhc3NvY2lhdGVkIG1lc3NhZ2VzCiAgICAgIHN0YXRlLmFjdGl2ZVRvcGljID0gewogICAgICAgIGlkOiB0b3BpYy5pZCwKICAgICAgICB0aXRsZTogdG9waWMudGl0bGUsCiAgICAgICAgbWVzc2FnZXM6IG1lc3NhZ2VzRm9yVGhpc1RvcGljIC8vIEFzc2lnbiB0aGUgZmlsdGVyZWQgbWVzc2FnZXMgaGVyZSEKICAgICAgfTsKICAgIH0sCiAgICBERUxFVEVfTUVTU0FHRShzdGF0ZSwgaWQpIHsKICAgICAgLy8gRmlyc3QsIHJlbW92ZSB0aGUgbWVzc2FnZSBmcm9tIHRoZSBnbG9iYWwgbGlzdCBvZiBhbGwgbWVzc2FnZXMKICAgICAgc3RhdGUuYWxsTWVzc2FnZXMgPSBzdGF0ZS5hbGxNZXNzYWdlcy5maWx0ZXIobWVzc2FnZSA9PiBtZXNzYWdlLmlkICE9PSBpZCk7CgogICAgICAvLyBUaGVuLCB1cGRhdGUgdGhlIG1lc3NhZ2VzIHdpdGhpbiB0aGUgY3VycmVudGx5IGFjdGl2ZSB0b3BpYwogICAgICAvLyAoVGhpcyBlbnN1cmVzIGNvbnNpc3RlbmN5IGlmIHRoZSBkZWxldGVkIG1lc3NhZ2Ugd2FzIHBhcnQgb2YgdGhlIGFjdGl2ZSB0b3BpYykKICAgICAgaWYgKHN0YXRlLmFjdGl2ZVRvcGljICYmIHN0YXRlLmFjdGl2ZVRvcGljLm1lc3NhZ2VzKSB7CiAgICAgICAgc3RhdGUuYWN0aXZlVG9waWMubWVzc2FnZXMgPSBzdGF0ZS5hY3RpdmVUb3BpYy5tZXNzYWdlcy5maWx0ZXIobWVzc2FnZSA9PiBtZXNzYWdlLmlkICE9PSBpZCk7CiAgICAgIH0KICAgIH0sCiAgICBTRVRfQUNUSVZFX01FU1NBR0Uoc3RhdGUsIG5ld01lc3NhZ2UpIHsKICAgICAgLy8gQWRkIHRoZSBuZXcgbWVzc2FnZSB0byB0aGUgZ2xvYmFsIGxpc3QKICAgICAgc3RhdGUuYWxsTWVzc2FnZXMucHVzaChuZXdNZXNzYWdlKTsKICAgICAgLy8gSWYgdGhlIG5ldyBtZXNzYWdlIGJlbG9uZ3MgdG8gdGhlIGN1cnJlbnQgYWN0aXZlIHRvcGljLCBhbHNvIGFkZCBpdCB0aGVyZQogICAgICBpZiAoc3RhdGUuYWN0aXZlVG9waWMuaWQgPT09IG5ld01lc3NhZ2UudG9waWNJZCkgewogICAgICAgIHN0YXRlLmFjdGl2ZVRvcGljLm1lc3NhZ2VzLnB1c2gobmV3TWVzc2FnZSk7CiAgICAgIH0KICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIC8vICoqKiBORVc6IEFjdGlvbiB0byBoYW5kbGUgc2VsZWN0aW5nIGEgdG9waWMgKioqCiAgICBzZWxlY3RUb3BpYyh7CiAgICAgIGNvbW1pdAogICAgfSwgdG9waWMpIHsKICAgICAgY29tbWl0KCdTRVRfQUNUSVZFX1RPUElDJywgdG9waWMpOwogICAgfSwKICAgIC8vIEV4YW1wbGUgYWN0aW9uIGZvciBkZWxldGluZyBhIG1lc3NhZ2UgKGNhbGwgdGhpcyBmcm9tIGNvbXBvbmVudHMpCiAgICBkZWxldGVNZXNzYWdlKHsKICAgICAgY29tbWl0CiAgICB9LCBtZXNzYWdlSWQpIHsKICAgICAgY29tbWl0KCdERUxFVEVfTUVTU0FHRScsIG1lc3NhZ2VJZCk7CiAgICB9LAogICAgLy8gRXhhbXBsZSBhY3Rpb24gZm9yIGFkZGluZyBhIG1lc3NhZ2UgKGNhbGwgdGhpcyBmcm9tIGNvbXBvbmVudHMpCiAgICBhZGRNZXNzYWdlKHsKICAgICAgY29tbWl0CiAgICB9LCBtZXNzYWdlKSB7CiAgICAgIC8vIFlvdSdsbCBsaWtlbHkgZ2VuZXJhdGUgSUQgYW5kIHRvcGljSWQgaGVyZSBvciBwYXNzIHRoZW0gaW4gZnJvbSB0aGUgY29tcG9uZW50CiAgICAgIC8vIEZvciBleGFtcGxlOiBtZXNzYWdlLmlkID0gRGF0ZS5ub3coKTsKICAgICAgY29tbWl0KCdBRERfTUVTU0FHRScsIG1lc3NhZ2UpOwogICAgfQogIH0sCiAgbW9kdWxlczoge30KfSk7"},{"version":3,"names":["Vue","Vuex","initialData","use","Store","state","topics","allMessages","messages","activeTopic","id","title","activeMessage","topicId","messageText","mutations","SET_TOPICS","data","SET_ACTIVE_TOPIC","topic","messagesForThisTopic","filter","message","DELETE_MESSAGE","SET_ACTIVE_MESSAGE","newMessage","push","actions","selectTopic","commit","deleteMessage","messageId","addMessage","modules"],"sources":["C:/Users/terme/Documents/GitHub/readit-example/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\n// Import your readit.json file directly\r\n// Adjust the path below based on where you actually place your readit.json file\r\nimport initialData from '@/data/readit.json';\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    // Initialize topics with the data from readit.json\r\n    topics: initialData.topics || [],\r\n    allMessages: initialData.messages || [],\r\n    // Use || [] to ensure it's an array even if topics is missing in JSON\r\n    // You might also want to initialize activeTopic and activeMessage based on initialData if desired\r\n    // For now, we'll keep them as they were, assuming they'll be set dynamically later.\r\n    activeTopic: {\r\n      id: 0,\r\n      title: '',\r\n      messages: []\r\n    },\r\n    activeMessage: {\r\n      id: null,\r\n      topicId: null,\r\n      title: '',\r\n      messageText: ''\r\n    }\r\n  },\r\n  mutations: {\r\n    SET_TOPICS(state, data) {\r\n      state.topics = data;\r\n    },\r\n    SET_ACTIVE_TOPIC(state, topic) {\r\n      const messagesForThisTopic = state.allMessages.filter(\r\n        message => message.topicId === topic.id\r\n      );\r\n\r\n      // Set the active topic and its associated messages\r\n      state.activeTopic = {\r\n        id: topic.id,\r\n        title: topic.title,\r\n        messages: messagesForThisTopic // Assign the filtered messages here!\r\n      };\r\n    },\r\n    DELETE_MESSAGE(state, id) {\r\n      // First, remove the message from the global list of all messages\r\n     state.allMessages = state.allMessages.filter(message => message.id !== id);\r\n\r\n      // Then, update the messages within the currently active topic\r\n      // (This ensures consistency if the deleted message was part of the active topic)\r\n      if (state.activeTopic && state.activeTopic.messages) {\r\n        state.activeTopic.messages = state.activeTopic.messages.filter(message => message.id !== id);\r\n      }\r\n    },\r\n    SET_ACTIVE_MESSAGE(state, newMessage) {\r\n      // Add the new message to the global list\r\n      state.allMessages.push(newMessage);\r\n      // If the new message belongs to the current active topic, also add it there\r\n      if (state.activeTopic.id === newMessage.topicId) {\r\n        state.activeTopic.messages.push(newMessage);\r\n      }\r\n    },\r\n  },\r\n  actions: {\r\n    // *** NEW: Action to handle selecting a topic ***\r\n    selectTopic({ commit }, topic) {\r\n      commit('SET_ACTIVE_TOPIC', topic);\r\n    },\r\n    // Example action for deleting a message (call this from components)\r\n    deleteMessage({ commit }, messageId) {\r\n      commit('DELETE_MESSAGE', messageId);\r\n    },\r\n    // Example action for adding a message (call this from components)\r\n    addMessage({ commit }, message) {\r\n      // You'll likely generate ID and topicId here or pass them in from the component\r\n      // For example: message.id = Date.now();\r\n      commit('ADD_MESSAGE', message);\r\n    }\r\n  },\r\n  modules: {\r\n  }\r\n})"],"mappings":";;;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA,OAAOC,WAAW,MAAM,oBAAoB;AAE5CF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACL;IACAC,MAAM,EAAEJ,WAAW,CAACI,MAAM,IAAI,EAAE;IAChCC,WAAW,EAAEL,WAAW,CAACM,QAAQ,IAAI,EAAE;IACvC;IACA;IACA;IACAC,WAAW,EAAE;MACXC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,EAAE;MACTH,QAAQ,EAAE;IACZ,CAAC;IACDI,aAAa,EAAE;MACbF,EAAE,EAAE,IAAI;MACRG,OAAO,EAAE,IAAI;MACbF,KAAK,EAAE,EAAE;MACTG,WAAW,EAAE;IACf;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,UAAUA,CAACX,KAAK,EAAEY,IAAI,EAAE;MACtBZ,KAAK,CAACC,MAAM,GAAGW,IAAI;IACrB,CAAC;IACDC,gBAAgBA,CAACb,KAAK,EAAEc,KAAK,EAAE;MAC7B,MAAMC,oBAAoB,GAAGf,KAAK,CAACE,WAAW,CAACc,MAAM,CACnDC,OAAO,IAAIA,OAAO,CAACT,OAAO,KAAKM,KAAK,CAACT,EACvC,CAAC;;MAED;MACAL,KAAK,CAACI,WAAW,GAAG;QAClBC,EAAE,EAAES,KAAK,CAACT,EAAE;QACZC,KAAK,EAAEQ,KAAK,CAACR,KAAK;QAClBH,QAAQ,EAAEY,oBAAoB,CAAC;MACjC,CAAC;IACH,CAAC;IACDG,cAAcA,CAAClB,KAAK,EAAEK,EAAE,EAAE;MACxB;MACDL,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACE,WAAW,CAACc,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACZ,EAAE,KAAKA,EAAE,CAAC;;MAEzE;MACA;MACA,IAAIL,KAAK,CAACI,WAAW,IAAIJ,KAAK,CAACI,WAAW,CAACD,QAAQ,EAAE;QACnDH,KAAK,CAACI,WAAW,CAACD,QAAQ,GAAGH,KAAK,CAACI,WAAW,CAACD,QAAQ,CAACa,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACZ,EAAE,KAAKA,EAAE,CAAC;MAC9F;IACF,CAAC;IACDc,kBAAkBA,CAACnB,KAAK,EAAEoB,UAAU,EAAE;MACpC;MACApB,KAAK,CAACE,WAAW,CAACmB,IAAI,CAACD,UAAU,CAAC;MAClC;MACA,IAAIpB,KAAK,CAACI,WAAW,CAACC,EAAE,KAAKe,UAAU,CAACZ,OAAO,EAAE;QAC/CR,KAAK,CAACI,WAAW,CAACD,QAAQ,CAACkB,IAAI,CAACD,UAAU,CAAC;MAC7C;IACF;EACF,CAAC;EACDE,OAAO,EAAE;IACP;IACAC,WAAWA,CAAC;MAAEC;IAAO,CAAC,EAAEV,KAAK,EAAE;MAC7BU,MAAM,CAAC,kBAAkB,EAAEV,KAAK,CAAC;IACnC,CAAC;IACD;IACAW,aAAaA,CAAC;MAAED;IAAO,CAAC,EAAEE,SAAS,EAAE;MACnCF,MAAM,CAAC,gBAAgB,EAAEE,SAAS,CAAC;IACrC,CAAC;IACD;IACAC,UAAUA,CAAC;MAAEH;IAAO,CAAC,EAAEP,OAAO,EAAE;MAC9B;MACA;MACAO,MAAM,CAAC,aAAa,EAAEP,OAAO,CAAC;IAChC;EACF,CAAC;EACDW,OAAO,EAAE,CACT;AACF,CAAC,CAAC","ignoreList":[]}]}